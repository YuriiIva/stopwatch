{"version":3,"sources":["components/App/App.jsx","index.js"],"names":["App","useState","start","setStart","time","setTime","status","setStatus","useEffect","interval","setInterval","prevTime","clearInterval","className","Math","floor","slice","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAyDeA,EAvDH,WACV,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAIC,EAAW,KAYf,OAVIP,GACFK,EAAU,GAEVE,EAAWC,aAAY,WACrBL,GAAQ,SAACM,GAAD,OAAcA,EAAW,SAChC,OAEHC,cAAcH,GACdF,EAAU,IAEL,kBAAMK,cAAcH,MAC1B,CAACP,IAYJ,OACE,sBAAKW,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,kCAAQ,IAAMC,KAAKC,MAAOX,EAAO,KAAW,KAAKY,OAAO,GAAxD,OACA,kCAAQ,IAAMF,KAAKC,MAAOX,EAAO,IAAS,KAAKY,OAAO,GAAtD,OACA,gCAAQ,IAAQZ,EAAO,IAAQ,IAAKY,OAAO,QAE7C,gCACE,wBAAQC,KAAK,SAASC,QAlBV,WACCf,GAAP,IAAVD,IAiB8CW,UAAU,MAApD,SACc,IAAXP,EAAe,QAAU,SAG5B,wBAAQW,KAAK,SAASC,QAAS,kBAAMf,GAAS,IAAQU,UAAU,MAAhE,qBAIF,wBAAQI,KAAK,SAASC,QArBZ,WACZb,EAAQ,GACRE,EAAU,IAmB8BM,UAAU,MAAhD,uBC5CNM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f1800d9d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [start, setStart] = useState(false);\n  const [time, setTime] = useState(0);\n\n  const [status, setStatus] = useState(0);\n\n  useEffect(() => {\n    let interval = null;\n\n    if (start) {\n      setStatus(0);\n\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 1000);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n      setStatus(1);\n    }\n    return () => clearInterval(interval);\n  }, [start]);\n\n  const toggleBtn = () => {\n    start === true ? setStart(false) : setStart(true);\n    // setTime(0);\n  };\n\n  const reset = () => {\n    setTime(0);\n    setStatus(0);\n  };\n\n  return (\n    <div className=\"stopwatch\">\n      <div className=\"tabl\">\n        <span>{(\"0\" + Math.floor((time / 3600000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:</span>\n        <span>{(\"0\" + ((time / 1000) % 60)).slice(-2)}</span>\n      </div>\n      <div>\n        <button type=\"button\" onClick={toggleBtn} className=\"btn\">\n          {status === 1 ? \"START\" : \"STOP\"}\n        </button>\n\n        <button type=\"button\" onClick={() => setStart(false)} className=\"btn\">\n          Wait\n        </button>\n      </div>\n      <button type=\"button\" onClick={reset} className=\"btn\">\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}